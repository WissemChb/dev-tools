name: "CI - Test"
on:
  push:
    branches:
      - "**"

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: "Validate Feature"
        uses: devcontainers/action@v1
        with:
          validate-only: "true"
          publish-features: "false"
          base-path-to-features: "./src"
          generate-docs: "false"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    needs: validate
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features:
          - "devtools"
        baseImage:
          - "mcr.microsoft.com/devcontainers/base:ubuntu"
          - "mcr.microsoft.com/vscode/devcontainers/base:alpine"
    steps:
      - uses: actions/checkout@v2

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .
  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Semantic Release - compute version
        uses: cycjimmy/semantic-release-action@v3
        id: semantic
        with:
          dry_run: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Replace feature version
        run: |
          apt install -y jq
          jq '.version="${{ steps.semantic.outputs.new_release_version }}"' ./src/devtools/devcontainer-feature.json > ./src/devtools/devcontainer-feature.json

      - name: "Publish Features"
        uses: devcontainers/action@v1
        with:
          publish-features: "true"
          base-path-to-features: "./src"
          generate-docs: "true"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR for Documentation
        id: push_image_info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          echo "Start."
          # Configure git and Push updates
          git config --global user.email github-actions@github.com
          git config --global user.name github-actions
          git config pull.rebase false
          branch=automated-documentation-update-$GITHUB_RUN_ID
          git checkout -b $branch
          message='Automated documentation update'
          # Add / update and commit
          git add */**/README.md
          git commit -m 'Automated documentation update [skip ci]' || export NO_UPDATES=true
          # Push
          if [ "$NO_UPDATES" != "true" ] ; then
              git push origin "$branch"
              gh pr create --title "$message" --body "$message"
          fi

      - name: Semantic Release - Publish Release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
